{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div formGroupName=\\\"userData\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userName\\\"></label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"userName\\\">\\n    </div>\\n    <br>\\n    <div class=\\\"form-group\\\">\\n      <textarea rows=\\\"5\\\" formControlName=\\\"bioData\\\" class=\\\"form-control\\\"></textarea>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"radio\\\" *ngFor=\\\"let g of genderNames\\\">\\n    <label><input type=\\\"radio\\\" [value]=\\\"g\\\" formControlName=\\\"gender\\\">{{g}}</label>\\n  </div>\\n  <hr>\\n  <div formArrayName=\\\"hobbies\\\">\\n    <button type=\\\"button\\\" (click)=\\\"onAddHobbies()\\\">Add hobby</button>\\n    <div class=\\\"form-group\\\" \\n    *ngFor=\\\"let hobbyCtr of myForm.get('hobbies').controls; index as i;\\\">\\n      <input type=\\\"text\\\" [formControlName]=\\\"i\\\">\\n    </div>\\n  </div>\\n  <div *ngFor=\\\"let fruit of fruits; let i = index;\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\" [value]=\\\"fruit.value\\\" (change)=\\\"onCheckedFruits($event)\\\">\\n      {{ fruit.name }}\\n    </label>\\n  </div>\\n\\n  <hr>\\n  <div>\\n    <button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>\\n  </div>\\n</form>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'ng-Rough work';\n  myForm: FormGroup;\n  genderNames = ['Male', 'Female', 'Not prefer to tell'];\n  hobbyArray: string[] = null;\n\n  //check box\n  fruits: Array<any> = [\n    {name: 'Banana', value: 'banana'},\n    {name: 'Apple', value: 'apple'},\n    {name: 'Kiwi', value: 'kiwi'},\n    {name: 'Papaya', value: 'papaya'},\n    {name: 'Lemon', value: 'lemon'},\n    {name: 'Grapes', value: 'grapes'},\n    {name: 'Orange', value: 'orange'},\n  ];\n  fruitAr: FormArray;\n  favFruits: string[] = null;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    // this.myForm = new FormGroup({\n    //   userData: new FormGroup({\n    //     userName: new FormControl(null, Validators.required),\n    //     bioData: new FormControl(null, [Validators.required, Validators.minLength(5)])\n    //   }),\n    //   gender: new FormControl('Male'),\n    //   hobbies: new FormArray([]),\n    //   checkBox: new FormArray([], Validators.required)\n    // });\n\n    this.myForm = this.fb.group({\n      userData: this.fb.group({\n        userName: this.fb.control(null, Validators.required),\n        bioData: this.fb.control(null, [Validators.required, Validators.minLength(5)])\n      }),\n      gender: this.fb.control('Female'),\n      hobbies: this.fb.array([]),\n      checkBox: this.fb.array([], Validators.required)\n    });\n  }\n\n  onSubmit() {\n    console.log(this.myForm.get('userData.userName').value);\n    console.log(this.myForm.get('userData.bioData').value);\n    console.log(this.myForm.get('gender').value);\n    this.hobbyArray = this.myForm.get('hobbies').value;\n    this.favFruits = this.myForm.get('checkBox').value;\n    \n    this.hobbyArray.forEach(a=> {\n      console.log(a);\n    });\n    console.log(this.myForm.value);\n  }\n\n  onAddHobbies() {\n    const hobbyCntr = new FormControl(null, Validators.required);\n    (<FormArray>this.myForm.get('hobbies')).push(hobbyCntr);\n  }\n\n  onCheckedFruits(e) {\n    // const fruitCheckboxAr: FormArray = this.myForm.get('checkBox') as FormArray;\n    \n    console.log(e.target.value);\n    if(e.target.checked) {\n      this.fruitCheckboxAr.push(new FormControl(e.target.value));\n    } else {\n\n      let i: number = 0;\n      this.fruitCheckboxAr.controls.forEach((item: FormControl) => {\n        if (item.value == e.target.value) {\n          this.fruitCheckboxAr.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n\n  get fruitCheckboxAr (){\n    return this.myForm.get('checkBox') as FormArray\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}